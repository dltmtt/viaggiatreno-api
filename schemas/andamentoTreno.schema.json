{
  "$id": "https://raw.githubusercontent.com/dltmtt/viaggiatreno-api/refs/heads/main/schemas/andamentoTreno.schema.json",
  "type": "object",
  "properties": {
    "tipoTreno": {
      "type": "string",
      "description": "Tipo di treno",
      "examples": ["PG", "ST", "VO"]
    },
    "orientamento": {
      "enum": ["A", "B", "", null],
      "description": "Orientamento del treno, può essere A (executive/business/1 classe in coda) o B (executive/business/1 classe in testa). È `null` per i treni che non sono distinti in classi o che non prevedono la prenotazione dei posti, come i regionali. È una stringa vuota quando, pur essendo un treno con classi, non è possibile determinare l'orientamento."
    },
    "codiceCliente": {
      "type": "integer",
      "description": "Codice cliente RFI associato all'impresa ferroviaria.",
      "examples": [1, 2, 4, 18, 63, 64, 910]
    },
    "fermateSoppresse": {
      "type": "array",
      "description": "Lista delle fermate soppresse",
      "items": {
        "type": "object"
      }
    },
    "dataPartenza": {
      "type": "string",
      "format": "date-time",
      "description": "Data e ora di partenza del treno.",
      "examples": ["2025-07-22 00:00:00.0"]
    },
    "fermate": {
      "type": "array",
      "description": "Lista dettagliata delle fermate del treno.",
      "items": {
        "type": "object",
        "properties": {
          "orientamento": {
            "enum": ["A", "B", null],
            "description": "Orientamento del treno, può essere A (executive/business/1 classe in coda) o B (executive/business/1 classe in testa). È `null` per i treni che non sono distinti in classi o che non prevedono la prenotazione dei posti, come i regionali."
          },
          "kcNumTreno": {
            "type": ["string", "null"],
            "description": "Numero KC del treno"
          },
          "stazione": {
            "type": "string",
            "description": "Nome della fermata"
          },
          "codLocOrig": {
            "type": "string",
            "pattern": "^S\\d{5}$",
            "description": "Codice della stazione di origine del treno"
          },
          "id": {
            "type": "string",
            "pattern": "^S\\d{5}$",
            "description": "Codice della fermata"
          },
          "listaCorrispondenze": {
            "const": []
          },
          "programmata": {
            "type": "integer",
            "description": "Ora di partenza programmata dalla fermata se la fermata è la partenza, o di arrivo programmato se la fermata intermedia o l'arrivo, espressa in millisecondi dalla Unix Epoch"
          },
          "programmataZero": {
            "type": ["integer", "null"]
          },
          "effettiva": {
            "type": ["integer", "null"],
            "description": "Ora di partenza effettiva dalla fermata se la fermata è la partenza o è una fermata intermedia, o di arrivo effettivo se la fermata è l'arrivo, espressa in millisecondi dalla Unix Epoch"
          },
          "ritardo": {
            "type": "number",
            "description": "Ritardo in minuti. Il valore assunto equivale al ritardo alla partenza se la stazione è quella di partenza, o al ritardo all'arrivo se la stazione è una fermata intermedia o l'arrivo."
          },
          "partenzaTeoricaZero": {
            "type": ["integer", "null"]
          },
          "arrivoTeoricoZero": {
            "type": ["integer", "null"]
          },
          "partenza_teorica": {
            "type": ["integer", "null"],
            "description": "Ora di partenza teorica dalla fermata in millisecondi dalla Unix Epoch"
          },
          "arrivo_teorico": {
            "type": ["integer", "null"],
            "description": "Ora di arrivo teorica dalla fermata in millisecondi dalla Unix Epoch"
          },
          "isNextChanged": {
            "type": "boolean"
          },
          "partenzaReale": {
            "type": ["integer", "null"],
            "description": "Ora di partenza reale dalla fermata in millisecondi dalla Unix Epoch"
          },
          "arrivoReale": {
            "type": ["integer", "null"],
            "description": "Ora di arrivo reale nella fermata in millisecondi dalla Unix Epoch"
          },
          "ritardoPartenza": {
            "type": "number",
            "description": "Ritardo alla partenza in minuti"
          },
          "ritardoArrivo": {
            "type": "number",
            "description": "Ritardo all'arrivo in minuti"
          },
          "progressivo": {
            "type": "integer",
            "examples": [1, 16, 31, 33, 50, 66]
          },
          "binarioEffettivoArrivoCodice": {
            "type": ["string", "null"],
            "description": "Codice del binario effettivo di arrivo"
          },
          "binarioEffettivoArrivoTipo": {
            "type": ["string", "null"],
            "description": "Tipo del binario effettivo di arrivo"
          },
          "binarioEffettivoArrivoDescrizione": {
            "type": ["string", "null"],
            "description": "Binario effettivo di arrivo"
          },
          "binarioProgrammatoArrivoCodice": {
            "type": ["string", "null"],
            "description": "Codice del binario programmato di arrivo"
          },
          "binarioProgrammatoArrivoDescrizione": {
            "type": ["string", "null"],
            "description": "Binario programmato di arrivo",
            "examples": ["1", "6"]
          },
          "binarioEffettivoPartenzaCodice": {
            "type": ["string", "null"],
            "description": "Codice del binario effettivo di partenza"
          },
          "binarioEffettivoPartenzaTipo": {
            "type": ["string", "null"],
            "description": "Tipo del binario effettivo di partenza",
            "examples": ["0"]
          },
          "binarioEffettivoPartenzaDescrizione": {
            "type": ["string", "null"],
            "description": "Binario effettivo di partenza",
            "examples": ["ITR O"]
          },
          "binarioProgrammatoPartenzaCodice": {
            "type": ["string", "null"],
            "description": "Codice del binario programmato di partenza",
            "examples": ["601"]
          },
          "binarioProgrammatoPartenzaDescrizione": {
            "type": ["string", "null"],
            "description": "Binario programmato di partenza",
            "examples": ["5"]
          },
          "tipoFermata": {
            "type": "string",
            "enum": ["P", "F", "A", ""],
            "description": "Tipo di fermata: P (partenza), F (fermata intermedia), A (arrivo) o vuoto per fermate soppresse"
          },
          "visualizzaPrevista": {
            "type": "boolean"
          },
          "nextChanged": {
            "type": "boolean"
          },
          "nextTrattaType": {
            "type": "integer"
          },
          "actualFermataType": {
            "type": "integer",
            "description": "Tipo di fermata. 3 per fermate soppresse.",
            "examples": [0, 3]
          },
          "materiale_label": {
            "type": ["string", "null"],
            "description": "Etichetta del materiale rotabile"
          }
        },
        "required": [
          "orientamento",
          "kcNumTreno",
          "stazione",
          "codLocOrig",
          "id",
          "listaCorrispondenze",
          "programmata",
          "programmataZero",
          "effettiva",
          "ritardo",
          "partenzaTeoricaZero",
          "arrivoTeoricoZero",
          "partenza_teorica",
          "arrivo_teorico",
          "isNextChanged",
          "partenzaReale",
          "arrivoReale",
          "ritardoPartenza",
          "ritardoArrivo",
          "progressivo",
          "binarioEffettivoArrivoCodice",
          "binarioEffettivoArrivoTipo",
          "binarioEffettivoArrivoDescrizione",
          "binarioProgrammatoArrivoCodice",
          "binarioProgrammatoArrivoDescrizione",
          "binarioEffettivoPartenzaCodice",
          "binarioEffettivoPartenzaTipo",
          "binarioEffettivoPartenzaDescrizione",
          "binarioProgrammatoPartenzaCodice",
          "binarioProgrammatoPartenzaDescrizione",
          "tipoFermata",
          "visualizzaPrevista",
          "nextChanged",
          "nextTrattaType",
          "actualFermataType",
          "materiale_label"
        ]
      }
    },
    "anormalita": {
      "type": "array",
      "description": "Lista delle anomalie del treno",
      "items": {
        "type": "object"
      }
    },
    "provvedimenti": {
      "type": "array",
      "description": "Lista dei provvedimenti applicati al treno",
      "items": {
        "type": "object"
      }
    },
    "segnalazioni": {
      "type": "array",
      "description": "Lista delle segnalazioni relative al treno",
      "items": {
        "type": "object"
      }
    },
    "oraUltimoRilevamento": {
      "type": ["integer", "null"],
      "description": "Timestamp dell'ultimo rilevamento del treno in millisecondi dalla Unix Epoch",
      "examples": [1753177620000, null]
    },
    "stazioneUltimoRilevamento": {
      "type": "string",
      "description": "Nome della stazione dell'ultimo rilevamento",
      "examples": ["--", "Bivio Casirate", "MILANO CENTRALE"]
    },
    "idDestinazione": {
      "type": "string",
      "pattern": "^S\\d{5}$",
      "description": "Codice identificativo della stazione di destinazione"
    },
    "idOrigine": {
      "type": "string",
      "pattern": "^S\\d{5}$",
      "description": "Codice identificativo della stazione di origine"
    },
    "cambiNumero": {
      "const": []
    },
    "hasProvvedimenti": {
      "type": "boolean"
    },
    "descOrientamento": {
      "type": "array",
      "description": "Descrizione dell'orientamento del treno in diverse lingue (IT, EN, DE, FR, ES, RO, JA, ZH, RU).",
      "items": {
        "type": "string"
      },
      "minItems": 9,
      "maxItems": 9,
      "examples": [
        [
          "Executive in testa",
          "Executive in the head",
          "Executive Zugspitze",
          "Executive en t&ecirc;te",
          "Executive al inicio del tren",
          "Executive la &icirc;nceputul trenului",
          "頭の中でExecutive",
          "Executive在前几节车厢",
          "Executive в головной части поезда"
        ]
      ]
    },
    "compOraUltimoRilevamento": {
      "type": "string",
      "description": "Ora dell'ultimo rilevamento",
      "examples": ["--", "14:30"]
    },
    "motivoRitardoPrevalente": {
      "type": ["string", "null"],
      "description": "Motivo prevalente del ritardo"
    },
    "descrizioneVCO": {
      "type": "string",
      "examples": [""]
    },
    "materiale_label": {
      "enum": ["business", null]
    },
    "arrivato": {
      "type": "boolean",
      "description": "Se il treno è già arrivato nella stazione di cui si vogliono conoscere le partenze."
    },
    "dataPartenzaTrenoAsDate": {
      "type": "string",
      "format": "date",
      "description": "Data di partenza del treno nel formato YYYY-MM-DD.",
      "examples": ["2025-07-26"]
    },
    "dataPartenzaTreno": {
      "type": "integer",
      "description": "Data di partenza del treno in millisecondi dalla Unix Epoch.",
      "examples": [1753480800000]
    },
    "partenzaTreno": {
      "type": ["integer", "null"],
      "description": "Ora di partenza del treno in millisecondi dalla Unix Epoch.",
      "examples": [1753556970000, null]
    },
    "millisDataPartenza": {
      "type": "string",
      "description": "Data di partenza del treno in millisecondi dalla Unix Epoch come stringa.",
      "examples": ["1753480800000"]
    },
    "numeroTreno": {
      "type": "integer",
      "description": "Numero identificativo del treno.",
      "examples": [23, 26387, 21007]
    },
    "categoria": {
      "type": "string",
      "description": "Categoria del treno. Usato insieme a `tipoProdotto` per calcolare `categoriaDescrizione`. Ad esempio, le Frecce vedono questo campo vuoto.",
      "examples": ["", "EC", "EN", "EXP", "IC", "ICN", "MET", "REG"]
    },
    "categoriaDescrizione": {
      "$comment": "Lo spazio non è un errore, è così che viene restituito.",
      "type": "string",
      "description": "Categoria del treno.",
      "examples": [
        " FA",
        " FB",
        " FR",
        "EC FR",
        "EC",
        "EN",
        "EXP",
        "IC",
        "ICN",
        "MET",
        "REG"
      ]
    },
    "origine": {
      "type": "string",
      "description": "Nome della stazione di origine del treno tra quelle presenti nel database. Può essere la prima stazione italiana o l'ultima estera prima del confine nel caso di treni che partono dall'estero."
    },
    "codOrigine": {
      "type": "string",
      "pattern": "^S\\d{5}$",
      "description": "Codice della stazione di origine del treno."
    },
    "destinazione": {
      "type": "string",
      "description": "Nome della stazione di destinazione del treno tra quelle presenti nel database. Può essere l'ultima stazione italiana o la prima estera dopo il confine nel caso di treni che vanno all'estero.",
      "examples": [
        "MODANE",
        "MILANO CENTRALE",
        "ROMA TERMINI",
        "TORINO PORTA NUOVA"
      ]
    },
    "codDestinazione": {
      "const": null
    },
    "origineEstera": {
      "const": null
    },
    "destinazioneEstera": {
      "type": ["string", "null"],
      "description": "Pur avendo sicuramente a che fare con treni che entrano in territorio estero, non è chiaro il significato: non indica necessariamente la stazione di destinazione estera, come suggerisce il nome. Ad esempio, il REG 22964 Ventimiglia-Cuneo, che passa per la Francia, ha questo campo settato a VENTIMIGLIA.",
      "examples": [
        "PARIS-GARE-DE-LYON",
        "ZUERICH HB",
        "MUENCHEN HBF",
        "VENTIMIGLIA"
      ]
    },
    "oraPartenzaEstera": {
      "type": ["integer", "null"],
      "description": "Orario (UTC) di partenza dalla stazione di partenza estera in millisecondi dalla mezzanotte della data di partenza del treno.",
      "examples": [66780000, null]
    },
    "oraArrivoEstera": {
      "const": null
    },
    "tratta": {
      "const": 0
    },
    "regione": {
      "const": 0
    },
    "origineZero": {
      "type": "string"
    },
    "destinazioneZero": {
      "type": "string"
    },
    "orarioPartenzaZero": {
      "type": "integer"
    },
    "orarioArrivoZero": {
      "type": "integer"
    },
    "circolante": {
      "type": "boolean"
    },
    "binarioEffettivoArrivoCodice": {
      "const": null
    },
    "binarioEffettivoArrivoDescrizione": {
      "const": null
    },
    "binarioEffettivoArrivoTipo": {
      "const": null
    },
    "binarioProgrammatoArrivoCodice": {
      "const": null
    },
    "binarioProgrammatoArrivoDescrizione": {
      "const": null
    },
    "binarioEffettivoPartenzaCodice": {
      "type": ["string", "null"],
      "examples": ["0", "2", "166", "167", "171", "1979", "1985", null]
    },
    "binarioEffettivoPartenzaDescrizione": {
      "type": ["string", "null"],
      "examples": ["16", "1", "6", "2TR"]
    },
    "binarioEffettivoPartenzaTipo": {
      "enum": ["0", null]
    },
    "binarioProgrammatoPartenzaCodice": {
      "enum": ["0", null]
    },
    "binarioProgrammatoPartenzaDescrizione": {
      "type": ["string", "null"],
      "examples": ["9", "II", "15", "XVII", "18", "1 Tr MI", "VIT"]
    },
    "subTitle": {
      "const": ""
    },
    "esisteCorsaZero": {
      "const": "0"
    },
    "inStazione": {
      "type": "boolean"
    },
    "haCambiNumero": {
      "type": "boolean",
      "description": "Indica se il treno cambia numero durante il viaggio."
    },
    "nonPartito": {
      "type": "boolean",
      "description": "Se il treno non è ancora partito."
    },
    "provvedimento": {
      "const": 0
    },
    "riprogrammazione": {
      "const": "N"
    },
    "orarioPartenza": {
      "type": "integer",
      "description": "Orario di partenza in millisecondi dalla Unix Epoch."
    },
    "orarioArrivo": {
      "type": "integer",
      "description": "Orario di arrivo in millisecondi dalla Unix Epoch."
    },
    "stazionePartenza": {
      "const": null
    },
    "stazioneArrivo": {
      "const": null
    },
    "statoTreno": {
      "const": null
    },
    "corrispondenze": {
      "const": []
    },
    "servizi": {
      "const": []
    },
    "ritardo": {
      "type": "number",
      "description": "Ritardo del treno in minuti. Se negativo indica un anticipo. Spesso a 0 anche quando il treno è in ritardo, utilizzare andamentoTreno per informazioni più accurate."
    },
    "tipoProdotto": {
      "enum": ["0", "99", "100", "101", "102"],
      "default": "0",
      "description": "Valore associato a 99 per i Treni Storici, a 100 per i Frecciarossa, a 101 per i Frecciargento e a 102 per i Frecciabianca. Viene usato insieme a `categoria` per determinare `categoriaDescrizione`."
    },
    "compOrarioPartenzaZeroEffettivo": {
      "type": "string",
      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]$",
      "description": "Orario di partenza effettivo dalla stazione di partenza programmata nel formato HH:MM.",
      "examples": ["11:52"]
    },
    "compOrarioArrivoZeroEffettivo": {
      "type": "string",
      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]$",
      "description": "Orario di arrivo effettivo alla stazione di arrivo programmata nel formato HH:MM.",
      "examples": ["18:10"]
    },
    "compOrarioPartenzaZero": {
      "type": "string",
      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]$",
      "description": "Orario di partenza programmato dalla stazione di partenza programmata nel formato HH:MM.",
      "examples": ["21:42"]
    },
    "compOrarioArrivoZero": {
      "type": "string",
      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]$",
      "description": "Orario di arrivo programmato alla stazione di arrivo programmata nel formato HH:MM.",
      "examples": ["18:10"]
    },
    "compOrarioArrivo": {
      "type": "string",
      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]$",
      "description": "Orario di arrivo nel formato HH:MM.",
      "examples": ["18:10"]
    },
    "compOrarioPartenza": {
      "type": "string",
      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]$",
      "description": "Orario di partenza nel formato HH:MM.",
      "examples": ["21:34", "22:06"]
    },
    "compNumeroTreno": {
      "type": "string",
      "description": "Nome completo del treno calcolato a partire da `categoria`, `numeroTreno` e `tipoProdotto`.",
      "examples": ["REG 2328", " TS 96376", " FA 8852"]
    },
    "compOrientamento": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "minItems": 9,
      "maxItems": 9,
      "description": "Orientamento del treno in diverse lingue (IT, EN, DE, FR, ES, RO, JA, ZH, RU).",
      "examples": [
        ["--", "--", "--", "--", "--", "--", "--", "--", "--"],
        [
          "Business in testa",
          "Business in the head",
          "Business Zugspitze",
          "Business en t&ecirc;te",
          "Business al inicio del tren",
          "Business la &icirc;nceputul trenului",
          "頭の中でBusiness",
          "Business在前几节车厢",
          "Business в головной части поезда"
        ],
        [
          "Business in coda",
          "Business at the rear",
          "Business Zugende",
          "Businesse en queue",
          "Business al final del tren",
          "Business la coada trenului",
          "背面のBusiness",
          "Business在后几节车厢",
          "Business в хвосте поезда"
        ],
        [
          "Executive in testa",
          "Executive in the head",
          "Executive Zugspitze",
          "Executive en t&ecirc;te",
          "Executive al inicio del tren",
          "Executive la &icirc;nceputul trenului",
          "頭の中でExecutive",
          "Executive在前几节车厢",
          "Executive в головной части поезда"
        ],
        [
          "Executive in coda",
          "Executive at the rear",
          "Executive Zugende",
          "Executive en queue",
          "Executive al final del tren",
          "Executive la coada trenului",
          "背面のExecutive",
          "Executive在后几节车厢",
          "Executive в хвосте поезда"
        ],
        [
          "1 classe in testa",
          "1st Class in the head",
          "1. Klasse Zugspitze ",
          "1&egrave;re classe en t&ecirc;te",
          "1&ordf; clase al inicio del tren",
          "clasa I la &icirc;nceputul trenului",
          "1等車前方",
          "一等车厢在前几节车厢",
          "1 класс в головной части поезда"
        ]
      ]
    },
    "compTipologiaTreno": {
      "enum": ["regionale", "nazionale"],
      "description": "Tipologia del treno."
    },
    "compClassRitardoTxt": {
      "enum": ["", "ritardo01_txt", "ritardo02_txt", "ritardo03_txt", null]
    },
    "compClassRitardoLine": {
      "enum": [
        "regolare_line",
        "ritardo01_line",
        "ritardo02_line",
        "ritardo03_line",
        null
      ]
    },
    "compImgRitardo2": {
      "$comment": "L'immagine che indica la cancellazione del treno è presente solo qua, non in compImgRitardo.",
      "enum": [
        "/vt_static/img/legenda/icone_legenda/nonpartito.png",
        "/vt_static/img/legenda/icone_legenda/regolare.png",
        "/vt_static/img/legenda/icone_legenda/ritardo01.png",
        "/vt_static/img/legenda/icone_legenda/ritardo02.png",
        "/vt_static/img/legenda/icone_legenda/ritardo03.png",
        "/vt_static/img/avvisi/alert3.png",
        "/vt_static/img/legenda/icone_legenda/cancellazione.png"
      ]
    },
    "compImgRitardo": {
      "enum": [
        "/vt_static/img/legenda/icone_legenda/nonpartito.png",
        "/vt_static/img/legenda/icone_legenda/regolare.png",
        "/vt_static/img/legenda/icone_legenda/ritardo01.png",
        "/vt_static/img/legenda/icone_legenda/ritardo02.png",
        "/vt_static/img/legenda/icone_legenda/ritardo03.png",
        "/vt_static/img/avvisi/alert3.png"
      ],
      "description": "URL relativo del bollino che indica il ritardo. È usato da ViaggiaTreno."
    },
    "compRitardo": {
      "type": "array",
      "description": "Descrizioni del ritardo in diverse lingue (IT, EN, DE, FR, ES, RO, JA, ZH, RU).",
      "items": {
        "type": ["string", "null"]
      },
      "minItems": 9,
      "maxItems": 9,
      "examples": [
        [
          "non partito",
          "not departed",
          "keine Partei",
          "pas encore partit",
          "no sali&oacute;",
          "nu a plecat",
          "未発車",
          "未出发",
          "не отправленный"
        ],
        [
          "in orario",
          "on time",
          "p&#252;nktlich",
          "&agrave; l'heure",
          "en horario",
          "conform orarului",
          "定刻",
          "按时",
          "по расписанию"
        ],
        [
          "ritardo 1 min.",
          "delay 1 min.",
          "Versp&#228;tung 1 Min.",
          "retard de 1 min.",
          "retraso de 1 min.",
          "&icirc;nt&acirc;rziere 1 min.",
          "遅延 1 分",
          "误点 1分钟",
          "опоздание на 1 минут"
        ],
        [
          "Mancato rilevamento",
          "Missing detection",
          "Erkennung fehlgeschlagen",
          "D&eacutetection manqu&eacutee",
          "Detecciónn fallida",
          null,
          null,
          null,
          null
        ],
        [
          "Cancellato",
          "Canceled",
          "Storniert",
          "Annul&eacute",
          "Cancelado",
          null,
          null,
          null,
          null
        ]
      ]
    },
    "compRitardoAndamento": {
      "type": "array",
      "items": {
        "type": ["string", "null"]
      },
      "minItems": 9,
      "maxItems": 9,
      "examples": [
        [
          "non partito",
          "not departed",
          "keine Partei",
          "pas encore partit",
          "no sali&oacute;",
          "nu a plecat",
          "未発車",
          "未出发",
          "не отправленный"
        ],
        [
          "con un anticipo di 1 min.",
          "1 minutes early",
          "mit einem Vorsprung von 1 Min.",
          "en avance de 1 min.",
          "est&aacute; adelantado 1 min.",
          "cu un avans de 1 min.",
          "1 分の繰上",
          "提前 1分钟",
          "con un anticipo di 1 min."
        ],
        [
          "con un ritardo di 1 min.",
          "1 minutes late",
          "mit einer Verz&#246;gerung von 1 Min.",
          "avec un retard de 1 min.",
          "con un retraso de 1 min.",
          "cu o &icirc;nt&acirc;rziere de 1 min.",
          "1 分の遅延",
          "误点 1分钟",
          "с опозданием в 1 минут"
        ]
      ]
    },
    "compInStazionePartenza": {
      "enum": [
        ["", "", "", "", "", "", "", "", ""],
        [
          "Partito",
          "Departed",
          "angef&#228;hrt",
          "Partit",
          "Salido",
          "Plecat",
          "発車済",
          "已出发",
          "отправленный"
        ]
      ]
    },
    "compInStazioneArrivo": {
      "enum": [
        ["", "", "", "", "", "", "", "", ""],
        [
          "Arrivato",
          "Arrived",
          "angekommen",
          "Arriv&eacute;",
          "Llegado",
          "Sosit",
          "到着済",
          "已到达",
          "прибывший"
        ]
      ]
    },
    "compOrarioEffettivoArrivo": {
      "const": null
    },
    "compDurata": {
      "type": "string",
      "pattern": "^([0-9]|1[0-9]|2[0-3]):([0-9]|[1-5][0-9])$",
      "description": "Durata del viaggio del treno nel formato H:M.",
      "examples": ["1:6", "0:47"]
    },
    "compImgCambiNumerazione": {
      "enum": [
        "&nbsp;&nbsp;",
        "&nbsp;&nbsp;<img src=\"/vt_static/img/legenda/icone_legenda/numerazioni.png\">"
      ],
      "description": "HTML per l'immagine del cambio numerazione."
    },

    "ultimoRilev": {
      "type": ["integer", "null"],
      "description": "Ultimo rilevamento del treno in millisecondi dalla Unix Epoch."
    },
    "iconTreno": {
      "const": null
    }
  },
  "required": [
    "tipoTreno",
    "orientamento",
    "codiceCliente",
    "dataPartenza",
    "fermate",
    "anormalita",
    "provvedimenti",
    "segnalazioni",
    "oraUltimoRilevamento",
    "stazioneUltimoRilevamento",
    "idDestinazione",
    "idOrigine",
    "cambiNumero",
    "hasProvvedimenti",
    "descOrientamento",
    "compOraUltimoRilevamento",
    "motivoRitardoPrevalente",
    "descrizioneVCO",
    "materiale_label",
    "arrivato",
    "dataPartenzaTrenoAsDate",
    "dataPartenzaTreno",
    "partenzaTreno",
    "millisDataPartenza",
    "numeroTreno",
    "categoria",
    "categoriaDescrizione",
    "origine",
    "codOrigine",
    "destinazione",
    "codDestinazione",
    "origineEstera",
    "destinazioneEstera",
    "oraPartenzaEstera",
    "oraArrivoEstera",
    "tratta",
    "regione",
    "origineZero",
    "destinazioneZero",
    "orarioPartenzaZero",
    "orarioArrivoZero",
    "circolante",
    "binarioEffettivoArrivoCodice",
    "binarioEffettivoArrivoDescrizione",
    "binarioEffettivoArrivoTipo",
    "binarioProgrammatoArrivoCodice",
    "binarioProgrammatoArrivoDescrizione",
    "binarioEffettivoPartenzaCodice",
    "binarioEffettivoPartenzaDescrizione",
    "binarioEffettivoPartenzaTipo",
    "binarioProgrammatoPartenzaCodice",
    "binarioProgrammatoPartenzaDescrizione",
    "subTitle",
    "esisteCorsaZero",
    "inStazione",
    "haCambiNumero",
    "nonPartito",
    "provvedimento",
    "riprogrammazione",
    "orarioPartenza",
    "orarioArrivo",
    "stazionePartenza",
    "stazioneArrivo",
    "statoTreno",
    "corrispondenze",
    "servizi",
    "ritardo",
    "tipoProdotto",
    "compOrarioPartenzaZeroEffettivo",
    "compOrarioArrivoZeroEffettivo",
    "compOrarioPartenzaZero",
    "compOrarioArrivoZero",
    "compOrarioArrivo",
    "compOrarioPartenza",
    "compNumeroTreno",
    "compOrientamento",
    "compTipologiaTreno",
    "compClassRitardoTxt",
    "compClassRitardoLine",
    "compImgRitardo2",
    "compImgRitardo",
    "compRitardo",
    "compRitardoAndamento",
    "compInStazionePartenza",
    "compInStazioneArrivo",
    "compOrarioEffettivoArrivo",
    "compDurata",
    "compImgCambiNumerazione",
    "ultimoRilev",
    "iconTreno"
  ]
}
